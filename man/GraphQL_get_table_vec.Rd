% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GraphQL_get_table.R,
%   R/querystring_to_tabname_and_vec.R
\name{GraphQL_get_table_vec}
\alias{GraphQL_get_table_vec}
\alias{GraphQL_get_table_string}
\alias{querystring_to_tabname_and_vec}
\title{GraphQL_get_table}
\usage{
GraphQL_get_table_vec(
  tabellenname,
  variablen,
  datenserver = "https://data.smclab.io/v1/graphql"
)

GraphQL_get_table_string(
  querystring,
  datenserver = "https://data.smclab.io/v1/graphql"
)

querystring_to_tabname_and_vec(querystring)
}
\arguments{
\item{tabellenname}{character string}

\item{variablen}{Variablenvektor, der die Namen der abzufragenden Tabellenvariablen enthält}

\item{datenserver}{character string mit URL der Datenbank, Defaultwert: https://data.smclab.io/v1/graphql}

\item{querystring}{character string containing a valid simple GraphQL-query. Must not contain additional parameter or nested structures.}
}
\value{
tibble mit den angefragten Daten

invisible returns a list with tabname and variables. Cats string into console for esy copy and pasting.
}
\description{
Funktionen, um Datensätze über die GraphQL-API abzufragen. Dabei ermöglicht \code{GraphQL_get_table_vec} eine Datensatzabfrage unter Angabe des Tabellennamens und der benötigten Variablennamen.
\code{GraphQL_get_table_string} erlaubt komplexere Abfragen, indem eine vollständige GraphQL-Abfrage als character-string übergeben werden kann.

Helper function to extraxt tablename and vector of variable names from an simple GraphQL query
}
\examples{
\dontrun{
variablen <- c()
GraphQL_get_table_vec("",  variablen, "https://data.smclab.io/v1/graphql")
}
\dontrun{
ToDo
}
querystring_to_tabname_and_vec(
"query MyQuery {
  smc_story_meta {
  story_no
  title
  type
  url
  ressort
  publication_date
  }
}")
}
